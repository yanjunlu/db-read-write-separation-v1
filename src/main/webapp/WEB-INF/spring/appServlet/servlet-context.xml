<?xml version="1.0" encoding="UTF-8"?>
<beans:beans xmlns="http://www.springframework.org/schema/mvc"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:beans="http://www.springframework.org/schema/beans"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:tx="http://www.springframework.org/schema/tx"
	xsi:schemaLocation="http://www.springframework.org/schema/mvc http://www.springframework.org/schema/mvc/spring-mvc.xsd
		http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd
		http://www.springframework.org/schema/tx http://www.springframework.org/schema/context/spring-tx.xsd">

	<!-- DispatcherServlet Context: defines this servlet's request-processing infrastructure -->
	
	<!-- Enables the Spring MVC @Controller programming model -->
	<annotation-driven />

	<!-- Handles HTTP GET requests for /resources/** by efficiently serving up static resources in the ${webappRoot}/resources directory -->
	<resources mapping="/resources/**" location="/resources/" />

	<!-- Resolves views selected for rendering by @Controllers to .jsp resources in the /WEB-INF/views directory -->
	<beans:bean class="org.springframework.web.servlet.view.InternalResourceViewResolver">
		<beans:property name="prefix" value="/WEB-INF/views/" />
		<beans:property name="suffix" value=".jsp" />
	</beans:bean>
	
	<context:component-scan base-package="com.lu.demo com.lu.demo.service" />
	
	<beans:bean id="propertyConfigurer" class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer">
        <beans:property name="locations">
            <beans:list>
                <beans:value>classpath*:jdbc.properties</beans:value>
            </beans:list>
        </beans:property>
        <beans:property name="fileEncoding" value="UTF-8" />
        <beans:property name= "ignoreResourceNotFound" value="false"/>
    </beans:bean>
    
    <!--spring的路由来管理数据源-->
    <beans:bean id="dynamicDataSource" class="com.lu.demo.utils.DynamicDataSource">
        <beans:property name="targetDataSources">
            <beans:map>
                <beans:entry value-ref="dataSourceMaster" key="db_master"/>
                <beans:entry value-ref="dataSourceSlaveOne" key="db_slave_one"/>
                <beans:entry value-ref="dataSourceSlaveTwo" key="db_slave_two"/>
            </beans:map>
        </beans:property>
    </beans:bean>

    <!--spring-mybatis整合-->
    <beans:bean id="dynamicsqlSessionFactory"
          class="org.mybatis.spring.SqlSessionFactoryBean">
        <beans:property name="dataSource" ref="dynamicDataSource"/>
        <beans:property name="mapperLocations">
            <beans:array>
                <beans:value>classpath:mappers/*Mapper.xml</beans:value>
            </beans:array>
        </beans:property>
        <beans:property name="configLocation" value="classpath:mybatis-config.xml"/>
        <beans:property name="typeAliasesPackage" value="com.lu.demo.entity"/>
    </beans:bean>

    <!--自动扫描所有的Mapper接口与文件-->
    <beans:bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">
        <beans:property name="basePackage" value="com.lu.demo.dao"></beans:property>
        <beans:property name="sqlSessionFactoryBeanName" value="dynamicsqlSessionFactory"></beans:property>
    </beans:bean>

    <!--配置事务-->
    <beans:bean id="transactionManager"
          class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
        <beans:property name="dataSource" ref="dynamicDataSource"/>
    </beans:bean>
    <!--开启注解事务-->
<!--     <tx:annotation-driven transaction-manager="transactionManager"/> -->
	
	<beans:import resource="classpath:datasource-master.xml"/>
    <beans:import resource="classpath:datasource-slave-one.xml"/>
    <beans:import resource="classpath:datasource-slave-two.xml"/>
	
</beans:beans>
